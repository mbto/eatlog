/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.eatlog.common.model.eatlog.tables.pojos;


import jakarta.validation.constraints.NotNull;

import java.io.Serializable;
import java.time.LocalDate;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Consumed implements Serializable {

    private static final long serialVersionUID = 1L;

    private UInteger id;
    private LocalDate date;
    private UInteger productId;
    private Short gram;

    public Consumed() {}

    public Consumed(Consumed value) {
        this.id = value.id;
        this.date = value.date;
        this.productId = value.productId;
        this.gram = value.gram;
    }

    public Consumed(
        UInteger id,
        LocalDate date,
        UInteger productId,
        Short gram
    ) {
        this.id = id;
        this.date = date;
        this.productId = productId;
        this.gram = gram;
    }

    /**
     * Getter for <code>eatlog.consumed.id</code>.
     */
    public UInteger getId() {
        return this.id;
    }

    /**
     * Setter for <code>eatlog.consumed.id</code>.
     */
    public void setId(UInteger id) {
        this.id = id;
    }

    /**
     * Getter for <code>eatlog.consumed.date</code>.
     */
    @NotNull
    public LocalDate getDate() {
        return this.date;
    }

    /**
     * Setter for <code>eatlog.consumed.date</code>.
     */
    public void setDate(LocalDate date) {
        this.date = date;
    }

    /**
     * Getter for <code>eatlog.consumed.product_id</code>.
     */
    @NotNull
    public UInteger getProductId() {
        return this.productId;
    }

    /**
     * Setter for <code>eatlog.consumed.product_id</code>.
     */
    public void setProductId(UInteger productId) {
        this.productId = productId;
    }

    /**
     * Getter for <code>eatlog.consumed.gram</code>.
     */
    @NotNull
    public Short getGram() {
        return this.gram;
    }

    /**
     * Setter for <code>eatlog.consumed.gram</code>.
     */
    public void setGram(Short gram) {
        this.gram = gram;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Consumed other = (Consumed) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.date == null) {
            if (other.date != null)
                return false;
        }
        else if (!this.date.equals(other.date))
            return false;
        if (this.productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!this.productId.equals(other.productId))
            return false;
        if (this.gram == null) {
            if (other.gram != null)
                return false;
        }
        else if (!this.gram.equals(other.gram))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.date == null) ? 0 : this.date.hashCode());
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.gram == null) ? 0 : this.gram.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Consumed (");

        sb.append(id);
        sb.append(", ").append(date);
        sb.append(", ").append(productId);
        sb.append(", ").append(gram);

        sb.append(")");
        return sb.toString();
    }
}
