/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.eatlog.common.model.eatlog.tables.records;


import com.github.mbto.eatlog.common.model.eatlog.tables.Setting;

import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.util.TreeSet;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * Create OAuth 2.0 client id: https://console.cloud.google.com/apis/credentials
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SettingRecord extends UpdatableRecordImpl<SettingRecord> implements Record4<UInteger, String, String, TreeSet<String>> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>eatlog.setting.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>eatlog.setting.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>eatlog.setting.key</code>.
     */
    public void setKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>eatlog.setting.key</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>eatlog.setting.value</code>. string or json
     */
    public void setValue(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>eatlog.setting.value</code>. string or json
     */
    public String getValue() {
        return (String) get(2);
    }

    /**
     * Setter for <code>eatlog.setting.roles</code>. json array with roles
     * names, example: ["owner","admin"]
     */
    public void setRoles(TreeSet<String> value) {
        set(3, value);
    }

    /**
     * Getter for <code>eatlog.setting.roles</code>. json array with roles
     * names, example: ["owner","admin"]
     */
    public TreeSet<String> getRoles() {
        return (TreeSet<String>) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UInteger, String, String, TreeSet<String>> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UInteger, String, String, TreeSet<String>> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Setting.SETTING.ID;
    }

    @Override
    public Field<String> field2() {
        return Setting.SETTING.KEY;
    }

    @Override
    public Field<String> field3() {
        return Setting.SETTING.VALUE;
    }

    @Override
    public Field<TreeSet<String>> field4() {
        return Setting.SETTING.ROLES;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getKey();
    }

    @Override
    public String component3() {
        return getValue();
    }

    @Override
    public TreeSet<String> component4() {
        return getRoles();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getKey();
    }

    @Override
    public String value3() {
        return getValue();
    }

    @Override
    public TreeSet<String> value4() {
        return getRoles();
    }

    @Override
    public SettingRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public SettingRecord value2(String value) {
        setKey(value);
        return this;
    }

    @Override
    public SettingRecord value3(String value) {
        setValue(value);
        return this;
    }

    @Override
    public SettingRecord value4(TreeSet<String> value) {
        setRoles(value);
        return this;
    }

    @Override
    public SettingRecord values(UInteger value1, String value2, String value3, TreeSet<String> value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SettingRecord
     */
    public SettingRecord() {
        super(Setting.SETTING);
    }

    /**
     * Create a detached, initialised SettingRecord
     */
    public SettingRecord(UInteger id, String key, String value, TreeSet<String> roles) {
        super(Setting.SETTING);

        setId(id);
        setKey(key);
        setValue(value);
        setRoles(roles);
    }

    /**
     * Create a detached, initialised SettingRecord
     */
    public SettingRecord(com.github.mbto.eatlog.common.model.eatlog.tables.pojos.Setting value) {
        super(Setting.SETTING);

        if (value != null) {
            setId(value.getId());
            setKey(value.getKey());
            setValue(value.getValue());
            setRoles(value.getRoles());
        }
    }
}
